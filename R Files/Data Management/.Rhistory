x = "Variable",
title = "Random Forest Feature Importance",
subtitle = "Top 10 Features")
my.lm <- lm(gdp.pcap ~ .-NAME-CBSA-X, data = df)
summary(my.lm)
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>% pull(variable) -> imp.features
post.df <- df %>%
select(im.features, NAME)
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) #%>% pull(variable) -> imp.features
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>% pull(variable) #-> imp.features
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
mutate(variable = as.character(variable)) %>% pull(variable) #-> imp.features
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
mutate(variable = as.character(variable)) %>% pull(variable) -> imp.features
post.df <- df %>%
select(im.features, NAME)
post.df <- df %>%
select(imp.features, NAME)
my.lm <- lm(gdp.pcap ~ .-NAME, data = post.df)
post.df <- df %>%
select(imp.features, NAME, gdp.pcap)
my.lm <- lm(gdp.pcap ~ .-NAME, data = post.df)
summary(my.lm)
my.lm$coefficients
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
labes(x = "Percentage of Adults (25+)\nwith college or higher")
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
labs(x = "Percentage of Adults (25+)\nwith college or higher")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+) with a College Degree or Higher",
fill = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)",
subtitle = "with a College Degree or Higher",
fill = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap, fill = NAME))+
geom_point(aes(color = NAME))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)",
subtitle = "with a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)",
subtitle = "with a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = comma)
library(scales)
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = comma)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = list(comma, dollar_format))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = list(comma, dollar_format()))+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
mutate(adult_col_high = adult_col_high/100)
df %>%
mutate(adult_col_high = adult_col_high/100) %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher",
color = "MSA")+
theme_bw()
df %>%
mutate(adult_col_high = adult_col_high/100) %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher (2010-2018)",
color = "MSA")+
theme_bw()
df %>%
mutate(amenities = amenities/100) %>%
ggplot(aes(x = amenities, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher (2010-2018)",
color = "MSA")+
theme_bw()
df %>%
mutate(adult_col_high = adult_col_high/100) %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher (2010-2018)",
color = "MSA")+
theme_bw()
######
## 7 May 2020
## ML Modeling
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Analysis")
######
## 7 May 2020
## ML Modeling
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Analysis")
df <- read.csv("../../Data/joined_data.csv")
library(dplyr)
library(caret)
library(randomForest)
library(ggplot2)
library(scales)
set.seed(12345)
index <- createDataPartition(df$gdp.pcap, p = .7, list = FALSE)
train <- df[index, ]
test <- df[-index, ]
### Random Forest:
set.seed(12345)
fit.forest <- randomForest(gdp.pcap ~ .-NAME-CBSA-X, data = train,
ntree = 100,
importance = TRUE)
fit.forest
pred.forest <- predict(fit.forest, test)
postResample(pred = pred.forest, obs = test$gdp.pcap)
varImpPlot(fit.forest, type=2, main="Variable Importance")
imp <- fit.forest$importance
importance.data <- data.frame(variable = rownames(imp),
p.increase.mse = imp[,1],
incnodepurity = imp[,2],
row.names = 1:nrow(imp))
### Feature Importance
importance.data %>%
ggplot(aes(x = reorder(variable, incnodepurity), y = incnodepurity)) +
geom_segment(aes(xend = variable, yend = 0)) +
geom_point( size=2, color="orange") +
coord_flip() +
theme_bw() +
labs(y = "Increase in Node Purity",
x = "Variable",
title = "Random Forest Feature Importance")
### Top 10 most important features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(variable, incnodepurity), y = incnodepurity)) +
geom_segment(aes(xend = variable, yend = 0)) +
geom_point( size=2, color="orange") +
coord_flip() +
theme_bw() +
labs(y = "Increase in Node Purity",
x = "Variable",
title = "Random Forest Feature Importance",
subtitle = "Top 10 Features")
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
mutate(variable = as.character(variable)) %>% pull(variable) -> imp.features
post.df <- df %>%
select(imp.features, NAME, gdp.pcap)
my.lm <- lm(gdp.pcap ~ .-NAME, data = post.df)
summary(my.lm)
my.lm$coefficients
df %>%
mutate(adult_col_high = adult_col_high/100) %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher (2010-2018)",
color = "MSA")+
theme_bw()
postResample(pred = pred.forest, obs = test$gdp.pcap)
pred.forest <- predict(fit.forest, test)
fit.forest
varImpPlot(fit.forest, type=2, main="Variable Importance")
importance.data %>%
ggplot(aes(x = reorder(variable, incnodepurity), y = incnodepurity)) +
geom_segment(aes(xend = variable, yend = 0)) +
geom_point( size=2, color="orange") +
coord_flip() +
theme_bw() +
labs(y = "Increase in Node Purity",
x = "Variable",
title = "Random Forest Feature Importance")
### Top 10 most important features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(variable, incnodepurity), y = incnodepurity)) +
geom_segment(aes(xend = variable, yend = 0)) +
geom_point( size=2, color="orange") +
coord_flip() +
theme_bw() +
labs(y = "Increase in Node Purity",
x = "Variable",
title = "Random Forest Feature Importance",
subtitle = "Top 10 Features")
## Analyze these 10 features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
mutate(variable = as.character(variable)) %>% pull(variable) -> imp.features
post.df <- df %>%
select(imp.features, NAME, gdp.pcap)
my.lm <- lm(gdp.pcap ~ .-NAME, data = post.df)
summary(my.lm)
my.lm$coefficients
df %>%
mutate(adult_col_high = adult_col_high/100) %>%
ggplot(aes(x = adult_col_high, y = gdp.pcap))+
geom_point(aes(color = NAME))+
scale_y_continuous(label = dollar_format())+
scale_x_continuous(label = percent)+
labs(x = "Percentage",
y = "Real GDP per Capita",
title = "Real GDP per Capita vs. Percentage of Adults (25+)\nwith a College Degree or Higher (2010-2018)",
color = "MSA")+
theme_bw()
### Neural Networks:
normalize <- function(x){
return((x - min(x))/ (max(x) - min(x)))
}
df_norm <- sapply(df, normalize)
df
df_norm <- sapply(df[,-c(1:4)], normalize)
concrete_norm <- as.data.frame(df_norm)
set.seed(12345)
df_norm <- as.data.frame(df_norm)
set.seed(12345)
index <- createDataPartition(df_norm$gdp.pcap, p = .7, list = FALSE)
train.nnet <- df_norm[index, ]
test.nnet <- df_norm[-index, ]
set.seed(12345)
concrete_model <- neuralnet(gdp.pcap ~ .,
data = train,
hidden = c(1, 3))
library(neuralnet)
set.seed(12345)
concrete_model <- neuralnet(gdp.pcap ~ .,
data = train,
hidden = c(1, 3))
concrete_model <- neuralnet(gdp.pcap ~ .,
data = train.nnet,
hidden = c(1, 3))
plot(concrete_model)
gdp_model <- neuralnet(gdp.pcap ~ .,
data = train.nnet,
hidden = c(1, 3))
plot(gdp_model)
View(df_norm)
test.nnet
neural_results <- compute(gdp_model, test.nnet[-31])
predicted_strength <- as.vector(model_results$net.result)
predicted_strength <- as.vector(neural_results$net.result)
cor(predicted_strength, test.nnet$gdp.pcap)
sqrt(mean((predicted_strength-test.nnet$gdp.pcap)^2))
predicted_strength
test.nnet$gdp.pcap
postResample(predicted_strength, test.nnet$gdp.pcap)
### Regression Trees:
trctrl <- trainControl(method = "cv",
number = 10,
selectionFunction = "oneSE")
### Regression Trees:
trctrl <- trainControl(method = "cv",
number = 10,
selectionFunction = "oneSE")
set.seed(1234)
rtree_fit <- train(gdp.pcap ~ .-NAME-CBSA-X,
data = train,
method = "rpart",
trControl = trctrl,
metric = "RMSE",
tuneLength = 10)
rtree_fit
# plot tree
library(rattle)
fancyRpartPlot(rtree_fit$finalModel)
#alternate graph
rpart.plot(rtree_fit$finalModel)
# evaluate performance
yhat <- predict(rtree_fit, test)
postResample(pred=yhat, obs=test$charges)
postResample(pred=yhat, obs=test$gdp.pcap)
######
## 7 May 2020
## KNN Cluster Analysis
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Data Management")
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
## Cluster Analysis:
library(factoextra)
joined_df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean)# %>%
######
## 7 May 2020
## KNN Cluster Analysis
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Data Management")
library(dplyr)
library(readr)
library(ggplot2)
library(tidyr)
## Cluster Analysis:
library(factoextra)
joined_df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean)# %>%
df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean)# %>%
### Top 10 most important features:
importance.data %>%
arrange(desc(incnodepurity)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(variable, incnodepurity), y = incnodepurity)) +
geom_segment(aes(xend = variable, yend = 0)) +
geom_point( size=2, color="orange") +
coord_flip() +
theme_bw() +
labs(y = "Increase in Node Purity",
x = "Variable",
title = "Random Forest Feature Importance",
subtitle = "Top 10 Features")
df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean) %>%
select(CBSA, finance, adult_col_high, adult_hs, upper_class, education,
professional, population, middle_class, information, pop.change.p) %>%
select(-year) -> df_summary
df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean) %>%
select(CBSA, finance, adult_col_high, adult_hs, upper_class, education,
professional, population, middle_class, information, pop.change.p) -> df_summary
df_st <- scale(df_summary[2:length(df_summary)])
set.seed(1234)
fit.km <- kmeans(df_st, 4, nstart = 25)
fit.km$size
fit.km$centers
# plot clusters (method 1)
fviz_cluster(fit.km, df_st,
ellipse.type = "convex",#creates shaded regions for clusters
palette = "Set2",#color choice using rcolorbrewer
ggtheme = theme_minimal())#minimal theme
means <- as.data.frame(fit.km$centers)
means$cluster <- row.names(means)
library(tidyr)
dfm <- gather(means, key = "Variable", value = "Value", pop.change.p:gdp.pcap)
View(means)
dfm <- gather(means, key = "Variable", value = "Value", finance:pop.change.p)
library(ggplot2)
ggplot(data = dfm,
aes(x = Variable, y = Value, group = cluster,
color = cluster, shape = cluster)) +
geom_point(size = 3) +
geom_line(size = 1) +
facet_wrap(.~cluster) +
labs(title = "Words")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = dfm,
aes(x = Variable, y = Value, group = cluster,
color = cluster, shape = cluster)) +
geom_point(size = 3) +
geom_line(size = 1) +
# facet_wrap(.~cluster) +
labs(title = "Words")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_summary$cluster = fit.km$cluster
df_summary %>%
left_join(pop %>% select(CBSA, NAME) %>% distinct(), by = "CBSA") -> df_summary
View(df_summary)
df %>%
group_by(CBSA) %>%
summarise_if(is.numeric, mean) %>%
select(CBSA, finance, adult_col_high, adult_hs, upper_class, education,
professional, population, middle_class, information, pop.change.p, gdp.pcap) -> df_summary
df_st <- scale(df_summary[2:length(df_summary)])
set.seed(1234)
fit.km <- kmeans(df_st, 4, nstart = 25)
fit.km$size
fit.km$centers
# plot clusters (method 1)
fviz_cluster(fit.km, df_st,
ellipse.type = "convex",#creates shaded regions for clusters
palette = "Set2",#color choice using rcolorbrewer
ggtheme = theme_minimal())#minimal theme
means <- as.data.frame(fit.km$centers)
means$cluster <- row.names(means)
dfm <- gather(means, key = "Variable", value = "Value", finance:gdp.pcap)
library(ggplot2)
ggplot(data = dfm,
aes(x = Variable, y = Value, group = cluster,
color = cluster, shape = cluster)) +
geom_point(size = 3) +
geom_line(size = 1) +
facet_wrap(.~cluster) +
labs(title = "Words")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_summary$cluster = fit.km$cluster
