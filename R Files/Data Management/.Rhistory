pattern = "income[0-9]{4}\\.csv") %>%
sapply(FUN = function(x){paste0("../../Data/Census Data/HH Income/", x)}) %>%
lapply(read.csv, na.strings = c("(X)", "N"))
`%notin%` <- Negate(`%in%`)
years = 2010:2018
df_store = data.frame(geo_id = numeric(),
name = character(),
variable = character(),
value = numeric())
View(files)
files[[1]] %>% View()
for (i in 1:length(files)){
acs = files[[i]]
acs %>%
slice(-1) %>%
select(geo_id = GEO_ID, name = NAME, names(acs)[grepl(".*[0-9]{3}E$", names(acs))]) %>%
mutate(geo_id = as.numeric(gsub("[0-9]{3}M[0-9]{3}US", "", geo_id))) %>%
filter(geo_id %in% msa$cbsa.code) -> acs_sub
acs_sub %>%
mutate(name = gsub("\\,.*", "", name)) %>%
gather("variable", "value", -name, -geo_id) %>%
mutate(year = years[i]) -> set
df_store = rbind(df_store, set)
}
View(df_store)
empty_set <- expand.grid(name = unique(df_store$name),
variable = unique(df_store$variable),
year = unique(df_store$year))
df_store %>%
left_join(empty_set, by = c("name", "variable", "year")) %>%
mutate(value = as.numeric(value)) %>%
spread("variable", "value") -> files_raw
cbind(files_raw[,c(1:3)],
files_raw[,-c(1:3)] %>%
select_if(function(col){ sum(is.na(col)) == 0 })) -> completed_set
#### Check What the Variables represent:
vars <- colnames(completed_set)[-c(1:3)]
ref = read_csv("../../Data/Census Data/HH Income/ACSST1Y2018.S1901_metadata_2020-05-07T132300.csv")
ref %>%
filter(GEO_ID %in% vars) %>% View()
View(df_store)
View(files_raw)
View(completed_set)
completed_set %>%
gather("variable", "value", -geo_id, -name, -year)
paste0("0", 2:9)
c(paste0("0", 2:9), "10", "11")
View(completed_set)
ref %>%
filter(GEO_ID %in% vars) %>% filter(GEO_ID %in% paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E")) %>% pull(GEO_ID)
ref %>%
filter(GEO_ID %in% vars) %>% filter(GEO_ID %in% paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E")) %>% pull(id)
c(rep("poverty", 3), "low_income", rep("middle_class", 3), "upper_middle_class", rep("upper_class", 2))
variable_defs <- data.frame(variable = c(paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E"),
paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")),
new_var = c(rep("poverty", 3), "low_income", rep("middle_class", 3),
"upper_middle_class", rep("upper_class", 2), paste0("nonfamily_", 1:10)))
View(variable_defs)
?str_extract
library(stringr)
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract(id, "$[0-9]{2,}[0-9]{3}.*"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract(id, "\\$[0-9]{2,}[0-9]{3}.*"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract(id, "\\$[0-9]{2,}[0-9]{3}"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract(id, "$"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract(id, "[0-9]*"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = str_extract_all(id, "[0-9]*"))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = unlist(str_extract_all(id, "[0-9]*")))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = gsub("^Estimate!!Households!!Total!!", "", id))
ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = gsub("^Estimate!!Nonfamily households!!Total!!", "", id))
brackets <- ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = gsub("^Estimate!!Nonfamily households!!Total!!", "", id)) -> pull(id)
brackets <- ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = gsub("^Estimate!!Nonfamily households!!Total!!", "", id)) %>% pull(id)
variable_defs <- data.frame(variable = c(paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E"),
paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")),
new_var = c(rep("poverty", 3), "low_income", rep("middle_class", 3),
"upper_middle_class", rep("upper_class", 2), brackets))
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var) %>%
summarise(value = sum(value))
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var) %>%
summarise(value = sum(value)) %>% View()
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>% View()
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var) %>%
summarise(value = sum(value)) %>% View()
variable_defs <- data.frame(variable = c(paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E"),
paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")),
new_var = c(rep("poverty", 3), "low_income", rep("middle_class", 3),
"upper_middle_class", rep("upper_class", 2), brackets),
type = rep(c("family", "nonfamily", each = 10)))
rep(c("family", "nonfamily"), each = 10)
variable_defs <- data.frame(variable = c(paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E"),
paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")),
new_var = c(rep("poverty", 3), "low_income", rep("middle_class", 3),
"upper_middle_class", rep("upper_class", 2), brackets),
type = rep(c("family", "nonfamily"), each = 10))
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var, type) %>%
summarise(value = sum(value)) %>% View()
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var, type) %>%
summarise(value = sum(value)) %>%
select(-name) %>%
na.omit() %>%
arrange(geo_id, year) %>% View()
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var, type) %>%
summarise(value = sum(value)) %>%
select(-name) %>%
na.omit() %>%
arrange(geo_id, year) -> income_info
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var, type) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
select(-name) %>%
na.omit() %>%
arrange(geo_id, year) -> income_info
View(income_info)
write.csv(income_info, file = "../../Data/Census Data/income_info.csv")
Educational Attainment)
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Data Management")
library(dplyr)
library(tidyr)
library(readr)
## Load MSA Keys:
msa <- read_csv("../../Data/cbsa_subset_table.csv")[,-1]
files <- list.files(path = "../../Data/Census Data/HH Income/",
pattern = "income[0-9]{4}\\.csv") %>%
sapply(FUN = function(x){paste0("../../Data/Census Data/HH Income/", x)}) %>%
lapply(read.csv, na.strings = c("(X)", "N"))
`%notin%` <- Negate(`%in%`)
years = 2010:2018
df_store = data.frame(geo_id = numeric(),
name = character(),
variable = character(),
value = numeric())
for (i in 1:length(files)){
acs = files[[i]]
acs %>%
slice(-1) %>%
select(geo_id = GEO_ID, name = NAME, names(acs)[grepl(".*[0-9]{3}E$", names(acs))]) %>%
mutate(geo_id = as.numeric(gsub("[0-9]{3}M[0-9]{3}US", "", geo_id))) %>%
filter(geo_id %in% msa$cbsa.code) -> acs_sub
acs_sub %>%
mutate(name = gsub("\\,.*", "", name)) %>%
gather("variable", "value", -name, -geo_id) %>%
mutate(year = years[i]) -> set
df_store = rbind(df_store, set)
}
empty_set <- expand.grid(name = unique(df_store$name),
variable = unique(df_store$variable),
year = unique(df_store$year))
df_store %>%
left_join(empty_set, by = c("name", "variable", "year")) %>%
mutate(value = as.numeric(value)) %>%
spread("variable", "value") -> files_raw
cbind(files_raw[,c(1:3)],
files_raw[,-c(1:3)] %>%
select_if(function(col){ sum(is.na(col)) == 0 })) -> completed_set
#### Check What the Variables represent:
vars <- colnames(completed_set)[-c(1:3)]
ref = read_csv("../../Data/Census Data/HH Income/ACSST1Y2018.S1901_metadata_2020-05-07T132300.csv")
ref %>%
filter(GEO_ID %in% vars) %>% View()
#### Selected Vars
## Household Income Brackets:
## S1901_C01_002E to S1901_C01_011E
## NonFamily Household Income Brackets:
## S1901_C04_002E to S1901_C04_011E
library(stringr)
brackets <- ref %>%
filter(GEO_ID %in% paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")) %>%
mutate(id = gsub("^Estimate!!Nonfamily households!!Total!!", "", id)) %>% pull(id)
variable_defs <- data.frame(variable = c(paste0("S1901_C01_0", c(paste0("0", 2:9), "10", "11"), "E"),
paste0("S1901_C04_0", c(paste0("0", 2:9), "10", "11"), "E")),
new_var = c(rep("poverty", 3), "low_income", rep("middle_class", 3),
rep("upper_middle_class", 2), "upper_class", brackets),
type = rep(c("family", "nonfamily"), each = 10))
completed_set %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(variable_defs, by = "variable") %>%
group_by(geo_id, name, year, new_var, type) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
select(-name) %>%
na.omit() %>%
arrange(geo_id, year) -> income_info
write.csv(income_info, file = "../../Data/Census Data/income_info.csv")
library(rjson)
library(blsAPI)
payload <- list(
'seriesid'=c('SMS36356200000000001'),
'startyear' = 2010,
'endyear' = 2018)
response <- blsAPI(payload)
json <- fromJSON(response)
View(json)
payload <- list(
'seriesid'=c('SMS36356200000000001'),
'startyear' = 2010,
'endyear' = 2018,
'calculations'=TRUE,
'annualaverage'=TRUE,)
payload <- list(
'seriesid'=c('SMS36356200000000001'),
'startyear' = 2010,
'endyear' = 2018,
'calculations' = TRUE,
'annualaverage' = TRUE)
response <- blsAPI(payload)
json <- fromJSON(response)
payload <- list(
'seriesid'=c('SMS36356200000000001'),
'startyear' = 2010,
'endyear' = 2018)
json$Results$series
unlist(json$Results$series)
i <- 0
for(d in json$Results$series[[1]]$data){
i <- i + 1
df[i,] <- unlist(d)
}
View(d)
json$Results$series[[1]]$data
unlist(json$Results$series[[1]]$data[1])
unlist(json$Results$series[[1]]$data[2])
unlist(json$Results$series[[1]]$data[3])
unlist(json$Results$series[[1]]$data[5])
for(d in json$Results$series[[1]]$data){
i <- i + 1
df[i,] <- unlist(d)
}
df = data.frame(year,
period,
periodName,
value)
df = data.frame(year = c(),
period = c(),
periodName = c(),
value = c())
View(df)
df = data.frame(year = character(0),
period = character(0),
periodName = character(0),
value = character(0))
for(d in json$Results$series[[1]]$data){
i <- i + 1
df <- rbind(df, unlist(d))
}
df = data.frame(year = character(0),
period = character(0),
periodName = character(0),
value = character(0))
i <- 0
for(d in json$Results$series[[1]]$data){
i <- i + 1
df <- rbind(df, unlist(d))
}
View(df)
for(d in json$Results$series[[1]]$data){
i <- i + 1
df <- rbind(df, unlist(d)[1,])
}
i <- 0
for(d in json$Results$series[[1]]$data){
i <- i + 1
df <- rbind(df, unlist(d)[1,])
}
df <- rbind(df, unname(unlist(d)))
df = data.frame(year = character(0),
period = character(0),
periodName = character(0),
value = character(0))
i <- 0
for(d in json$Results$series[[1]]$data){
i <- i + 1
df <- rbind(df, unname(unlist(d)))
}
View(df)
d
unlist(d)
str(unlist(d))
str(unname(unlist(d)))
######
## 7 May 2020
## US Census (Household Income)
######
setwd("~/Documents/GitHub/ct-data-praxis/R Files/Data Management")
library(dplyr)
library(tidyr)
library(readr)
## Load MSA Keys:
msa <- read_csv("../../Data/cbsa_subset_table.csv")[,-1]
files <- list.files(path = "../../Data/Census Data/Industry Employment/",
pattern = "emp[0-9]{4}\\.csv") %>%
sapply(FUN = function(x){paste0("../../Data/Census Data/Industry Employment/", x)}) %>%
lapply(read.csv, na.strings = c("(X)", "N"))
`%notin%` <- Negate(`%in%`)
years = 2010:2018
df_store = data.frame(geo_id = numeric(),
name = character(),
variable = character(),
value = numeric())
files[[1]] %>% View()
for (i in 1:length(files)){
acs = files[[i]]
acs %>%
slice(-1) %>%
select(geo_id = GEO_ID, name = NAME, names(acs)[grepl(".*[0-9]{3}E$", names(acs))]) %>%
mutate(geo_id = as.numeric(gsub("[0-9]{3}M[0-9]{3}US", "", geo_id))) %>%
filter(geo_id %in% msa$cbsa.code) -> acs_sub
acs_sub %>%
mutate(name = gsub("\\,.*", "", name)) %>%
gather("variable", "value", -name, -geo_id) %>%
mutate(year = years[i]) -> set
df_store = rbind(df_store, set)
}
View(df_store)
empty_set <- expand.grid(name = unique(df_store$name),
variable = unique(df_store$variable),
year = unique(df_store$year))
df_store %>%
left_join(empty_set, by = c("name", "variable", "year")) %>%
mutate(value = as.numeric(value)) %>%
spread("variable", "value") -> files_raw
cbind(files_raw[,c(1:3)],
files_raw[,-c(1:3)] %>%
select_if(function(col){ sum(is.na(col)) == 0 })) -> completed_set
#### Check What the Variables represent:
vars <- colnames(completed_set)[-c(1:3)]
ref = read_csv("../../Data/Census Data/Industry Employment/ACSST1Y2018.S2403_metadata_2020-05-07T161526.csv")
ref %>%
filter(GEO_ID %in% vars) %>% View()
ref %>%
filter(GEO_ID %in% vars) %>% pull(id)
ref %>%
filter(GEO_ID %in% vars) %>%
filter(grepl("Estimate!!Total", id)) %>% View()
ref %>%
filter(GEO_ID %in% vars) %>%
filter(grepl("Estimate!!Total", id)) %>% pull(id)
View(df_store)
c(paste0("0", c(1:2, 5, 7:9)), 12:13, 16, 20, 23)
var_codes <- data.frame(variable = paste0("S2403_C01_0",
c(paste0("0", c(1:2, 5, 7:9)), 12:13, 16, 20, 23),
"E"),
label = c("total_emp", "agri", "construction", "wholesale", "retail", "transportation",
"information", "finance", "professional", "education", "ammenities"))
View(ref)
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID"))
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID")) %>%
mutate(id = gsub("Estimate!!Total!!Civilian employed population 16 years and over!!", "", id))
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID")) %>%
mutate(id = gsub("Estimate!!Total!!Civilian employed population 16 years and over(|!!)", "", id))
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID")) %>%
mutate(id = gsub("Estimate!!Total!!Civilian employed population 16 years and over", "", id))
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID")) %>%
mutate(id = gsub("Estimate!!Total!!Civilian employed population 16 years and over!!", "", id))
var_codes %>%
left_join(ref %>% select(-X3) %>% filter(GEO_ID %in% vars), by = c("variable" = "GEO_ID")) %>%
mutate(id = gsub("Estimate!!Total!!Civilian employed population 16 years and over!!", "", id)) -> var_codes
var_codes$id[1] <- "total"
View(var_codes)
save(var_codes, file = "../../Data/Census Data/employment_industry_codebook.csv")
write.csv(var_codes, file = "../../Data/Census Data/employment_industry_codebook.csv")
View(completed_set)
completed_set %>%
gather("variable", "value", -geo_id, -name, -year)
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) < 100 }))
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 }))
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year)
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable")
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>% View()
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
spread("variable", "value")
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value)
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value) -> emp_industries
emp_industries
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value) -> emp_industries_raw
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value) -> emp_industries_counts
filter(label != "total_emp") %>% pull(label) -> mutate_vars
## Compute percentages:
var_codes %>%
mutate(label = as.character(label)) %>%
filter(label != "total_emp") %>% pull(label) -> mutate_vars
emp_industries_counts %>%
mutate_at(mutate_vars, function(x){round(x/total_emp, 3)})
for (var in mutate_vars) {
emp_industries_counts[,var] <- round(emp_industries_counts[,var]/emp_industries_counts[,"total_emp"], 3)
}
View(emp_industries_counts)
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value) -> emp_industries_counts
for (var in mutate_vars) {
emp_industries_counts[,var] <- round(emp_industries_counts[,var]/emp_industries_counts[,"total_emp"], 3)*100
}
cbind(completed_set[,c(1:3)],
completed_set[,-c(1:3)] %>%
select_if(function(col){ min(col) > 100 })) %>%
gather("variable", "value", -geo_id, -name, -year) %>%
left_join(var_codes %>% select(-id), by = "variable") %>%
na.omit() %>%
select(-variable) %>%
spread(label, value) -> emp_industries_counts
emp_industries_p <- emp_industries_counts
emp_industries_p <- emp_industries_counts
for (var in mutate_vars) {
emp_industries_p[,var] <- round(emp_industries_p[,var]/emp_industries_p[,"total_emp"], 3)*100
}
View(emp_industries_p)
write.csv(emp_industries_counts, file = "../../Data/Census Data/emp_industries_counts.csv")
write.csv(emp_industries_p, file = "../../Data/Census Data/emp_industries_p.csv")
